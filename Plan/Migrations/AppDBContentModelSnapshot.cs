// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Plan.Data.Entities;

namespace Plan.Migrations
{
    [DbContext(typeof(AppDBContent))]
    partial class AppDBContentModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<long>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<long>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<long>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<long>", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Plan.Data.Entities.ChangesWorkPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CountReason")
                        .HasColumnType("float");

                    b.Property<string>("EmailTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameChangesWorkPlan")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ReasonChanges")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("ChangesWorkPlan");
                });

            modelBuilder.Entity("Plan.Data.Entities.CharacteristicGroupsSemestr1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AcademicGroupsCon")
                        .HasColumnType("float");

                    b.Property<double>("AcademiсGroupsBud")
                        .HasColumnType("float");

                    b.Property<string>("CodeGrup")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<double>("CountDisciplinesSemester")
                        .HasColumnType("float");

                    b.Property<double>("CountStreamsBud")
                        .HasColumnType("float");

                    b.Property<double>("CountStreamsCon")
                        .HasColumnType("float");

                    b.Property<double>("CountStudentsBud")
                        .HasColumnType("float");

                    b.Property<double>("CountStudentsCon")
                        .HasColumnType("float");

                    b.Property<double>("Curriculum")
                        .HasColumnType("float");

                    b.Property<string>("EmailTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Faculty")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<double>("LabLessonBud")
                        .HasColumnType("float");

                    b.Property<double>("LabLessonCon")
                        .HasColumnType("float");

                    b.Property<string>("NameAcademiDisciplines")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<double>("PracticalLessonBud")
                        .HasColumnType("float");

                    b.Property<double>("PracticalLessonCon")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Characteristic1Semestr");
                });

            modelBuilder.Entity("Plan.Data.Entities.CharacteristicGroupsSemestr2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AcademicGroupsCon")
                        .HasColumnType("float");

                    b.Property<double>("AcademiсGroupsBud")
                        .HasColumnType("float");

                    b.Property<string>("CodeGrup")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<double>("CountDisciplinesSemester")
                        .HasColumnType("float");

                    b.Property<double>("CountStreamsBud")
                        .HasColumnType("float");

                    b.Property<double>("CountStreamsCon")
                        .HasColumnType("float");

                    b.Property<double>("CountStudentsBud")
                        .HasColumnType("float");

                    b.Property<double>("CountStudentsCon")
                        .HasColumnType("float");

                    b.Property<double>("Curriculum")
                        .HasColumnType("float");

                    b.Property<string>("EmailTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Faculty")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<double>("LabLessonBud")
                        .HasColumnType("float");

                    b.Property<double>("LabLessonCon")
                        .HasColumnType("float");

                    b.Property<string>("NameAcademiDisciplines")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<double>("PracticalLessonBud")
                        .HasColumnType("float");

                    b.Property<double>("PracticalLessonCon")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Characteristic2Semestr");
                });

            modelBuilder.Entity("Plan.Data.Entities.ControlMeasuresSemestr1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AbstractBudPl")
                        .HasColumnType("float");

                    b.Property<double>("AbstractBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("AbstractConPl")
                        .HasColumnType("float");

                    b.Property<double>("AbstractConVuc")
                        .HasColumnType("float");

                    b.Property<double>("CosultationBudPl")
                        .HasColumnType("float");

                    b.Property<double>("CosultationBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("CosultationConPl")
                        .HasColumnType("float");

                    b.Property<double>("CosultationConVuc")
                        .HasColumnType("float");

                    b.Property<double>("CursProectBudPl")
                        .HasColumnType("float");

                    b.Property<double>("CursProectBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("CursProectConPl")
                        .HasColumnType("float");

                    b.Property<double>("CursProectConVuc")
                        .HasColumnType("float");

                    b.Property<double>("CursRobBudPl")
                        .HasColumnType("float");

                    b.Property<double>("CursRobBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("CursRobConPl")
                        .HasColumnType("float");

                    b.Property<double>("CursRobConVuc")
                        .HasColumnType("float");

                    b.Property<double>("DKRBudPl")
                        .HasColumnType("float");

                    b.Property<double>("DKRBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("DKRConPl")
                        .HasColumnType("float");

                    b.Property<double>("DKRConVuc")
                        .HasColumnType("float");

                    b.Property<string>("EmailTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ExamBudPl")
                        .HasColumnType("float");

                    b.Property<double>("ExamBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("ExamConPl")
                        .HasColumnType("float");

                    b.Property<double>("ExamConVuc")
                        .HasColumnType("float");

                    b.Property<double>("KRBudPl")
                        .HasColumnType("float");

                    b.Property<double>("KRBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("KRConPl")
                        .HasColumnType("float");

                    b.Property<double>("KRConVuc")
                        .HasColumnType("float");

                    b.Property<string>("NameAcademiDisciplines")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<double>("RGRBudPl")
                        .HasColumnType("float");

                    b.Property<double>("RGRBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("RGRConPl")
                        .HasColumnType("float");

                    b.Property<double>("RGRConVuc")
                        .HasColumnType("float");

                    b.Property<double>("TestBudPl")
                        .HasColumnType("float");

                    b.Property<double>("TestBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("TestConPl")
                        .HasColumnType("float");

                    b.Property<double>("TestConVuc")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ControlSemestr1");
                });

            modelBuilder.Entity("Plan.Data.Entities.ControlMeasuresSemestr2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AbstractBudPl")
                        .HasColumnType("float");

                    b.Property<double>("AbstractBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("AbstractConPl")
                        .HasColumnType("float");

                    b.Property<double>("AbstractConVuc")
                        .HasColumnType("float");

                    b.Property<double>("CosultationBudPl")
                        .HasColumnType("float");

                    b.Property<double>("CosultationBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("CosultationConPl")
                        .HasColumnType("float");

                    b.Property<double>("CosultationConVuc")
                        .HasColumnType("float");

                    b.Property<double>("CursProectBudPl")
                        .HasColumnType("float");

                    b.Property<double>("CursProectBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("CursProectConPl")
                        .HasColumnType("float");

                    b.Property<double>("CursProectConVuc")
                        .HasColumnType("float");

                    b.Property<double>("CursRobBudPl")
                        .HasColumnType("float");

                    b.Property<double>("CursRobBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("CursRobConPl")
                        .HasColumnType("float");

                    b.Property<double>("CursRobConVuc")
                        .HasColumnType("float");

                    b.Property<double>("DKRBudPl")
                        .HasColumnType("float");

                    b.Property<double>("DKRBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("DKRConPl")
                        .HasColumnType("float");

                    b.Property<double>("DKRConVuc")
                        .HasColumnType("float");

                    b.Property<string>("EmailTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ExamBudPl")
                        .HasColumnType("float");

                    b.Property<double>("ExamBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("ExamConPl")
                        .HasColumnType("float");

                    b.Property<double>("ExamConVuc")
                        .HasColumnType("float");

                    b.Property<double>("KRBudPl")
                        .HasColumnType("float");

                    b.Property<double>("KRBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("KRConPl")
                        .HasColumnType("float");

                    b.Property<double>("KRConVuc")
                        .HasColumnType("float");

                    b.Property<string>("NameAcademiDisciplines")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<double>("RGRBudPl")
                        .HasColumnType("float");

                    b.Property<double>("RGRBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("RGRConPl")
                        .HasColumnType("float");

                    b.Property<double>("RGRConVuc")
                        .HasColumnType("float");

                    b.Property<double>("TestBudPl")
                        .HasColumnType("float");

                    b.Property<double>("TestBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("TestConPl")
                        .HasColumnType("float");

                    b.Property<double>("TestConVuc")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ControlSemestr2");
                });

            modelBuilder.Entity("Plan.Data.Entities.DbRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Plan.Data.Entities.DbUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Plan.Data.Entities.DbUserRole", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Plan.Data.Entities.EducationalActivities", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Correct")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateSuccess")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEducationalActivities")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("EducationalActivities");
                });

            modelBuilder.Entity("Plan.Data.Entities.LectureClassesTableNameSum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameColum")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LectureClassesNameSums");
                });

            modelBuilder.Entity("Plan.Data.Entities.LectureClassesTableSemestr1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndBudPl")
                        .HasColumnType("int");

                    b.Property<int>("IndBudVuc")
                        .HasColumnType("int");

                    b.Property<int>("IndConPl")
                        .HasColumnType("int");

                    b.Property<int>("IndConVuc")
                        .HasColumnType("int");

                    b.Property<int>("LabBudPl")
                        .HasColumnType("int");

                    b.Property<int>("LabBudVuc")
                        .HasColumnType("int");

                    b.Property<int>("LabConPl")
                        .HasColumnType("int");

                    b.Property<int>("LabConVuc")
                        .HasColumnType("int");

                    b.Property<int>("LectureBudPl")
                        .HasColumnType("int");

                    b.Property<int>("LectureBudVuc")
                        .HasColumnType("int");

                    b.Property<int>("LectureConPl")
                        .HasColumnType("int");

                    b.Property<int>("LectureConVuc")
                        .HasColumnType("int");

                    b.Property<string>("NameAcademiDisciplines")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("PractBudPl")
                        .HasColumnType("int");

                    b.Property<int>("PractBudVuc")
                        .HasColumnType("int");

                    b.Property<int>("PractConPl")
                        .HasColumnType("int");

                    b.Property<int>("PractConVuc")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LectureClassesSemestr1");
                });

            modelBuilder.Entity("Plan.Data.Entities.LectureClassesTableSemestr2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndBudPl")
                        .HasColumnType("int");

                    b.Property<int>("IndBudVuc")
                        .HasColumnType("int");

                    b.Property<int>("IndConPl")
                        .HasColumnType("int");

                    b.Property<int>("IndConVuc")
                        .HasColumnType("int");

                    b.Property<int>("LabBudPl")
                        .HasColumnType("int");

                    b.Property<int>("LabBudVuc")
                        .HasColumnType("int");

                    b.Property<int>("LabConPl")
                        .HasColumnType("int");

                    b.Property<int>("LabConVuc")
                        .HasColumnType("int");

                    b.Property<int>("LectureBudPl")
                        .HasColumnType("int");

                    b.Property<int>("LectureBudVuc")
                        .HasColumnType("int");

                    b.Property<int>("LectureConPl")
                        .HasColumnType("int");

                    b.Property<int>("LectureConVuc")
                        .HasColumnType("int");

                    b.Property<string>("NameAcademiDisciplines")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("PractBudPl")
                        .HasColumnType("int");

                    b.Property<int>("PractBudVuc")
                        .HasColumnType("int");

                    b.Property<int>("PractConPl")
                        .HasColumnType("int");

                    b.Property<int>("PractConVuc")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LectureClassesSemestr2");
                });

            modelBuilder.Entity("Plan.Data.Entities.MethodicalWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Correct")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateSuccess")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameMethodicalWork")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("MethodicalWork");
                });

            modelBuilder.Entity("Plan.Data.Entities.NameSubject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameSubjects")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NameSubject");
                });

            modelBuilder.Entity("Plan.Data.Entities.OrganizationalWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Correct")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateSuccess")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOrganizationalWork")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("OrganizationalWork");
                });

            modelBuilder.Entity("Plan.Data.Entities.OtherTypesWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeGrup")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("ColumId")
                        .HasColumnType("int");

                    b.Property<double>("CountStudentsBud")
                        .HasColumnType("float");

                    b.Property<double>("CountStudentsCon")
                        .HasColumnType("float");

                    b.Property<double>("Course")
                        .HasColumnType("float");

                    b.Property<string>("EmailTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Faculty")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<double>("HoursBudPl")
                        .HasColumnType("float");

                    b.Property<double>("HoursBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("HoursConPl")
                        .HasColumnType("float");

                    b.Property<double>("HoursConVuc")
                        .HasColumnType("float");

                    b.Property<string>("NameOtherTypesWork")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("OtherTypesWork");
                });

            modelBuilder.Entity("Plan.Data.Entities.OtherTypesWorkSemestr2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeGrup")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("ColumId")
                        .HasColumnType("int");

                    b.Property<double>("CountStudentsBud")
                        .HasColumnType("float");

                    b.Property<double>("CountStudentsCon")
                        .HasColumnType("float");

                    b.Property<double>("Course")
                        .HasColumnType("float");

                    b.Property<string>("EmailTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Faculty")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<double>("HoursBudPl")
                        .HasColumnType("float");

                    b.Property<double>("HoursBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("HoursConPl")
                        .HasColumnType("float");

                    b.Property<double>("HoursConVuc")
                        .HasColumnType("float");

                    b.Property<string>("NameOtherTypesWork")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("OtherTypesWorkSemestr2");
                });

            modelBuilder.Entity("Plan.Data.Entities.ScientificWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Correct")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateSuccess")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameScientificWork")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("ScientificWork");
                });

            modelBuilder.Entity("Plan.Data.Entities.UserNames", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DbUserId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("UserNames");
                });

            modelBuilder.Entity("Plan.Data.Entities.WorkloadSum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AllBudPl")
                        .HasColumnType("float");

                    b.Property<double>("AllBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("AllConPl")
                        .HasColumnType("float");

                    b.Property<double>("AllConVuc")
                        .HasColumnType("float");

                    b.Property<int>("ColumId")
                        .HasColumnType("int");

                    b.Property<string>("EmailTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameWorkloadSum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OtherBudPl")
                        .HasColumnType("float");

                    b.Property<double>("OtherBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("OtherConPl")
                        .HasColumnType("float");

                    b.Property<double>("OtherConVuc")
                        .HasColumnType("float");

                    b.Property<double>("TeachingBudPl")
                        .HasColumnType("float");

                    b.Property<double>("TeachingBudVuc")
                        .HasColumnType("float");

                    b.Property<double>("TeachingConPl")
                        .HasColumnType("float");

                    b.Property<double>("TeachingConVuc")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("WorkloadSum");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<long>", b =>
                {
                    b.HasOne("Plan.Data.Entities.DbRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<long>", b =>
                {
                    b.HasOne("Plan.Data.Entities.DbUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<long>", b =>
                {
                    b.HasOne("Plan.Data.Entities.DbUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<long>", b =>
                {
                    b.HasOne("Plan.Data.Entities.DbUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Plan.Data.Entities.DbUserRole", b =>
                {
                    b.HasOne("Plan.Data.Entities.DbRole", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Plan.Data.Entities.DbUser", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Plan.Data.Entities.DbRole", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Plan.Data.Entities.DbUser", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
